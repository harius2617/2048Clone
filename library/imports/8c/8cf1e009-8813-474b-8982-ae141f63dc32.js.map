{"version":3,"sources":["../../../../assets/Scripts/assets/Scripts/touchPad.js"],"names":["Emitter","require","DIRECTION","cc","Enum","RIGHT","LEFT","UP","DOWN","Class","extends","Component","onLoad","systemEvent","on","Node","EventType","TOUCH_MOVE","onKeyDown","touchEvent","direction","moveRight","moveLeft","moveUp","moveDown","instance","emit"],"mappings":";;;;;;AAAA,IAAMA,UAAUC,QAAQ,UAAR,CAAhB;AACA,IAAMC,YAAYC,GAAGC,IAAH,CAAQ;AACtBC,WAAO,CAAC,CADc;AAEtBC,UAAM,CAAC,CAFe;AAGtBC,QAAI,CAAC,CAHiB;AAItBC,UAAM,CAAC;AAJe,CAAR,CAAlB;;AAOAL,GAAGM,KAAH,CAAS;AACLC,aAASP,GAAGQ,SADP;AAELC,YAAQ,kBAAY;AAChBT,WAAGU,WAAH,CAAeC,EAAf,CAAkBX,GAAGY,IAAH,CAAQC,SAAR,CAAkBC,UAApC,EAAgD,KAAKC,SAArD,EAAgE,IAAhE;AACH,KAJI;;AAMLC,cANK,sBAMMC,SANN,EAMiB;AACd,gBAAQA,SAAR;AACI,iBAAKlB,UAAUG,KAAf;AAAsB;AAClB,yBAAKgB,SAAL;AACA;AACH;AACD,iBAAKnB,UAAUI,IAAf;AAAqB;AACjB,yBAAKgB,QAAL;AACA;AACH;AACD,iBAAKpB,UAAUK,EAAf;AAAmB;AACf,yBAAKgB,MAAL;AACA;AACH;AACD,iBAAKrB,UAAUM,IAAf;AAAqB;AACjB,yBAAKgB,QAAL;AACA;AACH;AAhBL;AAkBP,KAzBI;AA2BLH,aA3BK,uBA2BO;AACRrB,gBAAQyB,QAAR,CAAiBC,IAAjB,CAAsB,OAAtB;AACH,KA7BI;AA+BLJ,YA/BK,sBA+BM;AACPtB,gBAAQyB,QAAR,CAAiBC,IAAjB,CAAsB,MAAtB;AACH,KAjCI;AAkCLH,UAlCK,oBAkCI;AACLvB,gBAAQyB,QAAR,CAAiBC,IAAjB,CAAsB,IAAtB;AACH,KApCI;AAqCLF,YArCK,sBAqCM;AACPxB,gBAAQyB,QAAR,CAAiBC,IAAjB,CAAsB,MAAtB;AACH;AAvCI,CAAT","file":"touchPad.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["const Emitter = require('mEmitter');\nconst DIRECTION = cc.Enum({\n    RIGHT: -1,\n    LEFT: -1,\n    UP: -1,\n    DOWN: -1\n});\n\ncc.Class({\n    extends: cc.Component,\n    onLoad: function () {\n        cc.systemEvent.on(cc.Node.EventType.TOUCH_MOVE, this.onKeyDown, this);\n    },\n\n    touchEvent(direction) {\n            switch (direction) {\n                case DIRECTION.RIGHT: {\n                    this.moveRight();\n                    break;\n                }\n                case DIRECTION.LEFT: {\n                    this.moveLeft();\n                    break;\n                }\n                case DIRECTION.UP: {\n                    this.moveUp();\n                    break;\n                }\n                case DIRECTION.DOWN: {\n                    this.moveDown();\n                    break;\n                }\n            }\n    },\n\n    moveRight() {\n        Emitter.instance.emit('RIGHT');\n    },\n\n    moveLeft() {\n        Emitter.instance.emit('LEFT');\n    },\n    moveUp() {\n        Emitter.instance.emit(\"UP\");\n    },\n    moveDown() {\n        Emitter.instance.emit(\"DOWN\");\n    }\n});"]}